Link GitHub: https://github.com/joaobibiano/react-js-project-structure-lesson

Estrutura de pastas

    assets: 
        Serve para armazenar imagens (imagens leves, se forem pesadas sempre prefira hospedar em uma CDN), ícones, etc.

    components: 
        Componentes reutilizáveis da aplicação. Componentes que são unidades para sua aplicação, um button, um dropdown, um modal, etc. e que vão ser utilizados em várias páginas.

    hooks: 
        Essa pasta é utilizada para armazenar hooks que são genéricos, têm interação com hooks do React (useState, useEffect) e normalmente reutilizáveis e qualquer projeto, exemplos: useScreenSize, useLocalStorage, useSessionStorage, useUserActive.

    pages: 
        As pages são as páginas que usam vários componentes. É essa a página que o usuário vai ver. Crie uma pasta para cada página. Pode criar components dentro da pasta da página se ele não for ser reutilizado.

    services: 
        Aqui ficam as configurações de HTTP clientes, normalmente utilizando axios.

    store: 
        Ficam as definições de state managers, context api, zustand, redux.

    test: 
        Armazena arquivos de configuração de testes

    types: 
        Armazena as tipagens de typescript (types e interfaces) que são comuns em várias áreas do projeto. Se for usar em uma parte específica apenas, deixe lá.

    utils: 
        Funções utilitárias como formatCurrency, formatPhone, convertTimezone, parsePhone (javascript puro).



Exemplo de projeto com informações sobre algumas pastas e arquivos (APP - Loja de Carros)
    
    Estrutura resumida:
        assets
        components
        hooks
        pages
            Login
                index.ts
                Login.module.css
                Login.test.tsx
                Login.tsx
            Showroom
                index.ts
                ShowRoom.module.css
                ShowRoom.test.tsx
                ShowRoom.tsx
                hooks
                    useCars
                        index.ts
                        useCars.test.tsx
                        useCars.tsx
        services
            Api.ts
        services
        store
        test
            setup.ts
        types
        utils


    Explicação sobre os arquivos

    pages
        Login
            index.ts 
                Reexporta o componente Login (export { default } from './Login')
                    assim quando for importar vai poder escrever ../pages/Login apenas
                    em vez de ../pages/Login/Login para acessar o arquivo diretamente
                Além disso, você deixa claro no arquivo index quais arquivos da pasta você quer exportar e quais não 
            
            Login.module.css
                Também pode ser Login.style.tsx ou Login.styles.sass, dependendo do que for usar para os estilos da aplicação
                Evite usar css global
                    Crie um Arquivo.module.css
                    importe os estilos do componente assim: import styles from './Arquivo.module.css'
                        Exemplo de aplicação de uma classe .container: <div className={styles.container}>

            Login.test.tsx
                Sempre teste seu projeto, sempre que criar uma página ou componente, crie um arquivo de testes para testá-la(o)
                Exemplo do que usar: React testing library

            Login.tsx 
                Usa export default do componente aqui
        
        ShowRoom
            index.ts
            ShowRoom.module.css
            ShowRoom.teste.tsx
            ShowRoom.tsx

            hooks // Se os hulks só serão usados dentro de ShowRoom, a pasta pode ficar dentro da pasta ShowRoom 
                useCars

    test
        setup.ts
            Configuração da ferramenta de testes



